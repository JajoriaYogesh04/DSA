/************************************************************

    Following is the TreeNode class structure

    class TreeNode<T> 
    {
       public:
        T data;
        TreeNode<T> left;
        TreeNode<T> right;

        TreeNode(T data) 
        {
            this.data = data;
            left = null;
            right = null;
        }
    };

************************************************************/
import java.util.*;
public class Solution 
{
    public static void getInorder(TreeNode<Integer>root,ArrayList<Integer>list){
        if(root==null)return;
        getInorder(root.left,list);
        list.add(root.data);
        getInorder(root.right,list);
    }
    public static TreeNode<Integer> createBST(ArrayList<Integer>list,int si,int ei){
        if(si>ei)return null;
        int mid=si+(ei-si)/2;
        TreeNode<Integer> newNode= new TreeNode(list.get(mid));
        newNode.left=createBST(list,si,mid-1);
        newNode.right=createBST(list,mid+1,ei);
        return newNode;
    }
    public static TreeNode<Integer> balancedBst(TreeNode<Integer> root)
    {
        //    Write your code here.
        ArrayList<Integer>list=new ArrayList<>();
        getInorder(root,list);
        return createBST(list,0,list.size()-1);
    }
}