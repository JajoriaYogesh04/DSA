/*********************************************************

 Following is the TreeNode structure:

 class TreeNode {
     int data;
     TreeNode left;
     TreeNode right;
     TreeNode() {
         this.data = 0;
         this.left = null;
         this.right = null;
     }
     TreeNode(int val) {
         this.data = val;
         this.left = null;
         this.right = null;
     }
     TreeNode(int val, TreeNode left, TreeNode right) {
         this.data = val;
         this.left = left;
         this.right = right;
     }
 };
 ********************************************************/

import java.util.*;
public class Solution {
    public static void addToStack(TreeNode root,Stack<TreeNode>s){
        while(root!=null){
            s.push(root);
            root=root.left;
        }
    }
    public static List<Integer> mergeBST(TreeNode root1, TreeNode root2) {
        // Write your code here.
        ArrayList<Integer>list=new ArrayList<>();
        Stack<TreeNode>s1=new Stack<>();
        Stack<TreeNode>s2=new Stack<>();
        addToStack(root1,s1);
        addToStack(root2,s2);
        while(!s1.isEmpty()||!s2.isEmpty()){
            int a=s1.size()>0?s1.peek().data:Integer.MAX_VALUE;
            int b=s2.size()>0?s2.peek().data:Integer.MAX_VALUE;
            if(a<=b){
                TreeNode temp=s1.pop();
                list.add(temp.data);
                addToStack(temp.right,s1);
            }
            else{
                TreeNode temp=s2.pop();
                list.add(temp.data);
                addToStack(temp.right,s2);
            }
        }
        return list;
    }
}